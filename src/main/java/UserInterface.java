import java.util.Scanner;public class UserInterface {    private Adventure adventure;    Scanner scanner = new Scanner(System.in);    public UserInterface(Adventure adventure) {        this.adventure = adventure;    }    public static void exit() {        System.out.println("Exiting the game");        System.exit(0);    }    public void startProgram() {        System.out.println("Welome to THE adventure game! Let your journey commence!");        command();    }    public void command() {       final String MENU =                """                    You can use the following commands:                    Go - north, south, east, west - to move around the castle.                    Look - Look around the room you are standing in.                    Take "itemname" - To pick up different items from the rooms.                    Inventory - Displays what you have in your inventory                    Drop "itemname" - To drop an item you have in your inventory.                    Health - Shows your current health.                    Eat - You can eat different food items to gain health - Watch out! Some food might be bad.                    Equip - Equips a weapon you have in your inventory.                    Attack - Attacks an enemey, if you have a weapon equiped.                    Help - Displays this MENU again.                    Exit - Exit the game. """;        System.out.println(MENU);        try {            boolean player = true;            while (player) {                String input = scanner.nextLine();                String[] userInput = input.split(" ");                String command = userInput[0];                String userChoice = " ";                if (userInput.length > 1) {                    userChoice = userInput[1];                }                switch (command) {                    case "go" -> {                        char direction = userChoice.charAt(0);                        boolean succesGo = adventure.moveRoom(direction);                        if (succesGo) {                            System.out.println("You're going " + userChoice);                        } else {                            System.out.println("Can't go that way");                        }                    }                    case "look" -> System.out.print(adventure.look() + "\n");                    case "help" -> System.out.println(MENU);                    case "inventory", "inv", "i" -> System.out.println(adventure.showInventory());                    case "take" -> {                        boolean succesTake = adventure.takeItem(userChoice);                        if (succesTake) {                            System.out.println("Added " + userChoice + " to inventory");                        } else {                            System.out.println("No items found");                        }                    }                    case "health" -> {                        System.out.println("Your current health is: " + adventure.showHealth());                        if (adventure.showHealth() >= 40) {                            System.out.println("You're still in great health continue your journey");                        }                        if (adventure.showHealth() >= 20 && adventure.showHealth() < 40) {                            System.out.println("You feel a bit weakened, and the hunger starts to set in");                        }                        if (adventure.showHealth() > 1 && adventure.showHealth() < 20) {                            System.out.println("Find food, do not fight!");                        }                        if (adventure.showHealth() == 0) {                            System.out.println("You're dead - better luck next time");                        }                    }                    case "eat" -> {                        ReturnMessage itemToEat = adventure.eat(userChoice);                        switch (itemToEat) {                            case USE -> System.out.println("You ate " + userChoice + " nom nom nom");                            case CANT_BE_USED -> System.out.println("You cannot eat: " + userChoice + "you idiot");                            case CANT_BE_FOUND -> System.out.println("NO SUCH THING AS: " + userChoice);                        }                    }                    case "equip" -> {                        ReturnMessage itemToEquip = adventure.equip(userChoice);                        switch (itemToEquip) {                            case USE -> System.out.println("You equipped " + userChoice);                            case CANT_BE_USED -> System.out.println("You cannot use : " + userChoice);                            case CANT_BE_FOUND -> System.out.println(userChoice + " can't be found");                        }                    }                    case "attack" -> {                        ReturnMessageAttack attack = adventure.attack(); //adventure er kontroller                        switch (attack) {                            case ATTACK -> System.out.println("You have sucesfully attacked");                            case NO_WEAPON_EQUIPPED -> System.out.println("No weapons equip!!");                            case OUT_OF_AMMO ->                                    System.out.println("Out of ammunition! Find a new weapon");                        }                    }                    case "drop" -> {                        boolean succesDrop = adventure.dropItem(userChoice);                        if (succesDrop) {                            System.out.println("Dropped " + userChoice + " on the floor");                        } else {                            System.out.println("No items to drop");                        }                    }                    case "exit" -> exit();                    default -> System.out.println("Not a command, try another");                }            }        } catch (Exception e) {            throw new RuntimeException(e);        }    }}